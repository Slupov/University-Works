//АЛГОРИТЪМ НА ЕВКЛИД - ДОМАШНА РАБОТА N2 СТОЯН ЕЛЕНОВ ЛУПОВ F82264

//1) Рекурсивно
int gcd(int a, int b)
{
    if (a == 0)
        return b;
    return gcd(b%a, a);
}

//---------------------------------------------------------------------------
//2) с цикъл с предусловие
int gcd(int а, int b) {
	//ако и двете числа са нула, резултатът е невалиден
    if(а == 0 && b == 0)
        return -1;

	//при отрицателни стойности обръщаме знака (търсим абсолютна стойност)
    if(а < 0) а = -а;
    if(b < 0) b = -b;

    int r; //oстатък
    while(b != 0) {
        r = а % b;
        а = b;
        b = r;
    }
    return а;
}

//---------------------------------------------------------------------------
//3) с итеративен цикъл
int gcd(int m, int n)
{
    if(m == 0 || n == 0)
        return(0);

    for(int r = m%n; r != 0; m = n, n = r, r = m%n);

    return(n);
}

//---------------------------------------------------------------------------
//4) с goto
int gcd(int a, int b)
{
	//ако и двете числа са нула, резултатът е невалиден
	if (a == 0 && b == 0)
		return -1;

	//при отрицателни стойности обръщаме знака (търсим абсолютна стойност)
	if (a < 0) a = -a;
	if (b < 0) b = -b;

	int r; //oстатък
	startloop:
	if (b != 0) {
		r = a % b;
		a = b;
		b = r;
		goto startloop;
	}
	return a;
}

//---------------------------------------------------------------------------
//5) с цикъл със следусловие
int gcd(int a, int b)
{
	//ако и двете числа са нула, резултатът е невалиден
	if (a == 0 && b == 0)
		return -1;

	//при отрицателни стойности обръщаме знака (търсим абсолютна стойност)
	if (a < 0) a = -a;
	if (b < 0) b = -b;

	int r;
	do
	{
		r = a % b;
		a = b;
		b = r;
	} while (b != 0);

	return a;
}

//---------------------------------------------------------------------------
//6) с изваждане
int gcd(int a, int b)
{
	//ако и двете числа са нула, резултатът е невалиден
	if (a == 0 && b == 0)
		return -1;

	//при отрицателни стойности обръщаме знака (търсим абсолютна стойност)
	if (a < 0) a = -a;
	if (b < 0) b = -b;

	while(a != b) 
	{
		while(a > b)
		{
			a -= b;
		}
		while(b > a)
		{
			b -= a;
		}
	}

	return a;
}